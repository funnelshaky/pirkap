# frontend/Dockerfile.prod

# --- ETAPA 1: Construcción (Build Stage) ---
# Usamos una imagen completa de Node.js para construir nuestro proyecto
FROM node:18-alpine as builder

WORKDIR /app

# Copiamos las dependencias y las instalamos
COPY package.json ./
COPY package-lock.json ./
RUN npm install

# Copiamos el resto del código y construimos la versión de producción
COPY . .
RUN npm run build

# --- ETAPA 2: Producción (Production Stage) ---
# Empezamos con una imagen súper ligera de Nginx
FROM nginx:stable-alpine

# Copiamos los archivos de la carpeta 'build' de la etapa anterior
# a la carpeta que Nginx usa para servir contenido web
COPY --from=builder /app/build /usr/share/nginx/html

# --- ¡LÍNEA AÑADIDA! ---
# Copiamos nuestra configuración personalizada de Nginx (nginx.conf)
# para que sobreescriba la de por defecto. Esto es lo que arregla el error 404 al refrescar.
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Exponemos el puerto 80 (el puerto estándar para web)
EXPOSE 80

# El comando por defecto de la imagen de Nginx ya se encarga de arrancar el servidor